# "docker-compose up" to run or just start from docker dashboard

version: '3.1'
services:
  api:  # Renamed service name to lowercase
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgreSQL
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgres://mathmatchup_user:qun4grrSZLF5zZqVYCrioi4A3w6bIFz6@dpg-cjels1qvvtos739m3560-a.ohio-postgres.render.com/mathmatchup
#      - SPRING_DATASOURCE_USERNAME=mathmatchup_user
#      - SPRING_DATASOURCE_PASSWORD=qun4grrSZLF5zZqVYCrioi4A3w6bIFz6
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/mathmatchupdb
   #   - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update


  postgreSQL:  # Renamed service name to lowercase
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
   #   - POSTGRES_USER=postgres
      - POSTGRES_DB=mathmatchupdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/instructionarsenal
#      - SPRING_DATASOURCE_USERNAME=postgres
#      - SPRING_DATASOURCE_PASSWORD=password
#      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
#
#  PostgreSQL:
#    image: postgres
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_PASSWORD=password
#      - POSTGRES_USER=postgres
#      - POSTGRES_DB=instructionarsenal